[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/analysis.js",
    "memberof": null,
    "longname": "src/analysis.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {curry, flowRight, isNumber, map, fill, zip, range, identity, flatten} from 'lodash';\nimport {Map, List, Set} from 'immutable';\n\n\n/**\n * Value on a board representing a black stone.\n */\nexport const BLACK = 'black';\n\n\n/**\n * Value on a board representing a white stone.\n */\nexport const WHITE = 'white';\n\n\n/**\n * @private\n */\nexport const EMPTY = null;\n\n\n/**\n * @private\n */\nexport const SIZE_KEY = 'size';\n\n\n/**\n * @private\n */\nexport function allPossibleMoves(size) {\n    return Set(flatten(map(\n        range(size),\n        i => map(\n            zip(range(size), fill(Array(size), i)),\n            List\n        )\n    )));\n}\n\n\n/**\n * Returns unoccupied positions on the board.\n *\n * @private\n * @param {Map} board\n * @returns {Set}\n */\nexport function emptyPositions(board) {\n    return allPossibleMoves(board.get(SIZE_KEY)).subtract(board.keys());\n}\n\n\n/**\n * Gets the spaces immediately touching the passed position.\n *\n * Considers the board size and acts correctly on sides and corners.\n *\n * @private\n * @param {Map} board\n * @param {List} position\n * @returns {Set}\n */\nexport function adjacentPositions(board, position) {\n    const inc = i => i + 1;\n    const dec = i => i - 1;\n    const size = board.get(SIZE_KEY);\n    const [x, y] = [position.first(), position.last()];\n    const check = flowRight(\n        curry(Math.min, 2)(size - 1),\n        curry(Math.max, 2)(0)\n    );\n\n    return Set([\n        [identity, inc],\n        [identity, dec],\n        [inc, identity],\n        [dec, identity],\n    ].map(\n        ([first, last]) => List.of(check(first(x)), check(last(y)))\n    )).subtract(Set.of(position));\n}\n\n\n/**\n * Similar to {@link adjacentPositions}, but filters on a state.\n *\n * @private\n * @param {Map} board\n * @param {List} position\n * @param {string} color\n * @returns {Set}\n */\nexport function matchingAdjacentPositions(board, position, color) {\n    if (color === undefined) {\n        color = board.get(position, EMPTY);\n    }\n\n    return adjacentPositions(board, position)\n        .filter(pos => board.get(pos, EMPTY) === color);\n}\n\n\n/**\n * Gets a set of positions of the logical group associated with the given position.\n *\n * @private\n * @param {Map} board\n * @param {List} position\n * @returns {Set}\n */\nexport function group(board, position) {\n    let found = Set();\n    let queue = Set.of(position);\n\n    while (!queue.isEmpty()) {\n        const current = queue.first();\n        const more_matching = matchingAdjacentPositions(board, current);\n\n        found = found.add(current);\n        queue = queue.rest().union(more_matching.subtract(found));\n    }\n\n    return found;\n}\n\n\n/**\n * Counts liberties for the stone at the given position.\n *\n * @private\n * @param {Map} board\n * @param {List} position\n * @returns {number}\n */\nexport function liberties(board, position) {\n    return group(board, position).reduce(\n        (acc, pos) => acc.union(matchingAdjacentPositions(board, pos, EMPTY)),\n        Set()\n    ).size;\n}\n\n\n/**\n * Returns {@link BLACK} if {@link WHITE}, {@link WHITE} if {@link BLACK}.\n *\n * @private\n * @param {string} color\n * @throws {string} when color is neither black nor white\n * @returns {string}\n */\nexport function oppositeColor(color) {\n    if (color !== BLACK && color !== WHITE) {\n        throw 'Must pass in a color';\n    }\n    return color === BLACK ? WHITE : BLACK;\n}\n\n\n/**\n * Checks if given position is a valid play for the given color.\n *\n * @private\n * @param {Map} board\n * @param {List} position\n * @param {List} color\n * @returns {boolean}\n */\nexport function isLegalMove(board, position, color) {\n    const will_have_liberty = liberties(board.set(position, color), position) > 0;\n    const will_kill_something = matchingAdjacentPositions(board, position, oppositeColor(color))\n        .some(pos => liberties(board, pos) === 1);\n\n    return will_have_liberty || will_kill_something;\n}\n\n\n/**\n * @private\n */\nexport function prettyString(board) {\n    const size = board.get(SIZE_KEY);\n    let pretty_string = '';\n\n    for (var i = 0; i < size; i++) {\n        for (var j = 0; j < size; j++) {\n            let color = board.get(List.of(i, j), EMPTY);\n            switch(color) {\n                case BLACK:\n                    pretty_string += 'O';\n                    break;\n                case WHITE:\n                    pretty_string += 'X';\n                    break;\n                case EMPTY:\n                    pretty_string += '+';\n                    break;\n            }\n        }\n        pretty_string += '\\n';\n    }\n    return pretty_string;\n}\n\n\n/**\n * @private\n */\nexport function emptyBoard(size) {\n    if (!isNumber(size) || size <= 0 || size !== parseInt(size)) {\n        throw 'An empty board must be created from a positive integer.';\n    }\n\n    return Map().set(SIZE_KEY, size);\n}\n\n/**\n * @private\n */\nexport function addMove(board, position, color) {\n    if (!isLegalMove(board, position, color)) {\n        throw 'Not a valid position';\n    }\n\n    if (board.has(position)) {\n        throw 'There is already a stone there';\n    }\n\n    const killed = matchingAdjacentPositions(board, position, oppositeColor(color)).reduce(\n        (acc, pos) => acc.union(liberties(board, pos) === 1 ? group(board, pos) : Set()),\n        Set()\n    );\n\n    return removeMoves(board, killed).set(position, color);\n}\n\n\n/**\n * @private\n */\nexport function removeMoves(board, positions) {\n    return positions.reduce(\n        (acc, position) => acc.delete(position),\n        board\n    );\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "BLACK",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~BLACK",
    "access": null,
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{BLACK}",
    "description": "Value on a board representing a black stone.",
    "lineNumber": 8,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "WHITE",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~WHITE",
    "access": null,
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{WHITE}",
    "description": "Value on a board representing a white stone.",
    "lineNumber": 14,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "EMPTY",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~EMPTY",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{EMPTY}",
    "description": null,
    "lineNumber": 20,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "SIZE_KEY",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~SIZE_KEY",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{SIZE_KEY}",
    "description": null,
    "lineNumber": 26,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "allPossibleMoves",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~allPossibleMoves",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{allPossibleMoves}",
    "description": null,
    "lineNumber": 32,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "emptyPositions",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~emptyPositions",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{emptyPositions}",
    "description": "Returns unoccupied positions on the board.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "adjacentPositions",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~adjacentPositions",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{adjacentPositions}",
    "description": "Gets the spaces immediately touching the passed position.\n\nConsiders the board size and acts correctly on sides and corners.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "matchingAdjacentPositions",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~matchingAdjacentPositions",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{matchingAdjacentPositions}",
    "description": "Similar to {@link adjacentPositions}, but filters on a state.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "group",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~group",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{group}",
    "description": "Gets a set of positions of the logical group associated with the given position.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "liberties",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~liberties",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{liberties}",
    "description": "Counts liberties for the stone at the given position.",
    "lineNumber": 137,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "oppositeColor",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~oppositeColor",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{oppositeColor}",
    "description": "Returns {@link BLACK} if {@link WHITE}, {@link WHITE} if {@link BLACK}.",
    "lineNumber": 153,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "string"
        ],
        "description": "when color is neither black nor white"
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isLegalMove",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~isLegalMove",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{isLegalMove}",
    "description": "Checks if given position is a valid play for the given color.",
    "lineNumber": 170,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "prettyString",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~prettyString",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{prettyString}",
    "description": null,
    "lineNumber": 182,
    "params": [
      {
        "name": "board",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "emptyBoard",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~emptyBoard",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{emptyBoard}",
    "description": null,
    "lineNumber": 210,
    "params": [
      {
        "name": "size",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "addMove",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~addMove",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{addMove}",
    "description": null,
    "lineNumber": 221,
    "params": [
      {
        "name": "board",
        "types": [
          "*"
        ]
      },
      {
        "name": "position",
        "types": [
          "*"
        ]
      },
      {
        "name": "color",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "removeMoves",
    "memberof": "src/analysis.js",
    "longname": "src/analysis.js~removeMoves",
    "access": "private",
    "export": true,
    "importPath": "godash/src/analysis.js",
    "importStyle": "{removeMoves}",
    "description": null,
    "lineNumber": 242,
    "params": [
      {
        "name": "board",
        "types": [
          "*"
        ]
      },
      {
        "name": "positions",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/board.js",
    "memberof": null,
    "longname": "src/board.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {Map, List} from 'immutable';\nimport {MapSchema, FixedListSchema, OneOf, Exactly} from 'immutable-schema';\n\nimport {isPositiveInteger} from './utils';\nimport {\n    SIZE_KEY, allPossibleMoves, group, liberties, isLegalMove,\n    BLACK, WHITE, EMPTY, prettyString, emptyBoard, removeMoves, addMove\n} from './analysis';\n\n\n/**\n * @private\n */\nexport const isValidBoardMap = MapSchema(\n    FixedListSchema(isNumber, isNumber), OneOf(BLACK, WHITE),\n    Exactly(SIZE_KEY), isPositiveInteger\n);\n\n\n/**\n * Represents a board state.\n * @example\n * var Immutable = require('immutable');\n *\n * var board1 = Board(19);\n * var board2_data = Immutable.Map().set('size', 19);\n * var board2 = Board(board2_data);\n *\n * assert(board1.equals(board2));\n */\nexport class Board {\n    /**\n     * @param {Map} board_data argument specifying either the backing Map or the size\n     * @throws {TypeError} when board_data is neither a proper board Map or a positive integer\n     */\n    constructor(board_data) {\n        if (isValidBoardMap(board_data)) {\n            this._positions = board_data;\n        } else if (isPositiveInteger(board_data)) {\n            this._positions = emptyBoard(board_data);\n        } else {\n            throw TypeError('Instantiate a Board with a Map or a positive integer');\n        }\n    }\n\n    /**\n     * Immutable data structure holding the positions in a {@link Map}.\n     *\n     * @returns {Map}\n     */\n    get positions() {\n        return this._positions;\n    }\n\n    /**\n     * Positive integer representing the size of the board.\n     *\n     * @returns {number}\n     */\n    get board_size() {\n        return this.positions.get(SIZE_KEY);\n    }\n\n    /**\n     * Adds a black move at the specified position.  Follows the rules of go\n     * which means dead stones will be removed.\n     *\n     * @param {List} position\n     * @throws {string} when the move is not valid\n     * @returns {Board}\n     * @see {@link addMove}\n     */\n    addBlackMove(position) {\n        return this.addMove(position, BLACK);\n    }\n\n    /**\n     * Adds a white move at the specified position.  Follows the rules of go\n     * which means dead stones will be removed.\n     *\n     * @param {List} position\n     * @throws {string} when the move is not valid\n     * @returns {Board}\n     * @see {@link addMove}\n     */\n    addWhiteMove(position) {\n        return this.addMove(position, WHITE);\n    }\n\n    /**\n     * Adds a move at the specified position.  Follows the rules of go\n     * which means dead stones will be removed.\n     *\n     * @param {List} position\n     * @param {string} color\n     * @throws {string} when the move is not valid\n     * @returns {Board}\n     * @example\n     * var board = Board(3);\n     * var new_board = board.addBlackMove(position(1, 0));\n     *\n     * console.log(board.toPrettyString());\n     * // +++\n     * // +++\n     * // +++\n     * console.log(new_board.toPrettyString());\n     * // +++\n     * // O++\n     * // +++\n     *\n     * @example\n     * var board = Board(3)\n     *     .addBlackMove(position(0, 1))\n     *     .addBlackMove(position(2, 1))\n     *     .addBlackMove(position(1, 2))\n     *     .addWhiteMove(position(1, 1));\n     * var new_board.addBlackMove(position(1, 0));\n     *\n     * console.log(board.toPrettyString());\n     * // +O+\n     * // +XO\n     * // +O+\n     * console.log(new_board.toPrettyString());\n     * // +O+\n     * // O+O\n     * // +O+\n     */\n    addMove(position, color) {\n        return new Board(addMove(this.positions, position, color));\n    }\n\n    /**\n     * Removes positions.  Positions that are not on the board are ignored.\n     *\n     * @param {Set} positions\n     * @returns {Board}\n     */\n    removeMoves(positions) {\n        return new Board(removeMoves(this.positions, positions));\n    }\n\n    /**\n     * A set of all possible moves on the board, even the occupied ones.\n     *\n     * @returns {Set} contains Lists (2-tuples)\n     */\n    allPossibleMoves() {\n        return allPossibleMoves(this.board_size);\n    }\n\n    /**\n     * Gets a set of positions of the logical group associated with the given position.\n     *\n     * @param {List} position\n     * @returns {Set}\n     */\n    group(position) {\n        return group(this.positions, position);\n    }\n\n    /**\n     * Check if a move is legal for black\n     *\n     * @param {List} position\n     * @returns {boolean}\n     */\n    isLegalBlackMove(position) {\n        return isLegalMove(this.positions, position, BLACK);\n    }\n\n    /**\n     * Check if a move is legal for white\n     *\n     * @param {List} position\n     * @returns {boolean}\n     */\n    isLegalWhiteMove(position) {\n        return isLegalMove(this.positions, position, WHITE);\n    }\n\n    /**\n     * Counts liberties for the stone at the given position.\n     *\n     * @param {List} position\n     * @returns {number}\n     */\n    liberties(position) {\n        return liberties(this.positions, position);\n    }\n\n    /**\n     * Compare with another board.\n     *\n     * @param {*} other_board Board or Board.positions\n     * @returns {boolean}\n     */\n    equals(other_board) {\n        if (!other_board) {\n            throw TypeError('Pass in another board to compare');\n        }\n\n        return this.positions.equals(other_board.positions || other_board);\n    }\n\n    /**\n     * @returns {string} ASCII board\n     */\n    toPrettyString() {\n        return prettyString(this.positions);\n    }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isValidBoardMap",
    "memberof": "src/board.js",
    "longname": "src/board.js~isValidBoardMap",
    "access": "private",
    "export": true,
    "importPath": "godash/src/board.js",
    "importStyle": "{isValidBoardMap}",
    "description": null,
    "lineNumber": 14,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Board",
    "memberof": "src/board.js",
    "longname": "src/board.js~Board",
    "access": null,
    "export": true,
    "importPath": "godash/src/board.js",
    "importStyle": "{Board}",
    "description": "Represents a board state.",
    "examples": [
      "var Immutable = require('immutable');\n\nvar board1 = Board(19);\nvar board2_data = Immutable.Map().set('size', 19);\nvar board2 = Board(board2_data);\n\nassert(board1.equals(board2));"
    ],
    "lineNumber": 31,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#constructor",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Map"
        ],
        "spread": false,
        "optional": false,
        "name": "board_data",
        "description": "argument specifying either the backing Map or the size"
      }
    ],
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "when board_data is neither a proper board Map or a positive integer"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_positions",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#_positions",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_positions",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#_positions",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "positions",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#positions",
    "access": null,
    "description": "Immutable data structure holding the positions in a {@link Map}.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Map}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Map"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "board_size",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#board_size",
    "access": null,
    "description": "Positive integer representing the size of the board.",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addBlackMove",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#addBlackMove",
    "access": null,
    "description": "Adds a black move at the specified position.  Follows the rules of go\nwhich means dead stones will be removed.",
    "see": [
      "{@link addMove}"
    ],
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Board}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "string"
        ],
        "description": "when the move is not valid"
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addWhiteMove",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#addWhiteMove",
    "access": null,
    "description": "Adds a white move at the specified position.  Follows the rules of go\nwhich means dead stones will be removed.",
    "see": [
      "{@link addMove}"
    ],
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Board}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "string"
        ],
        "description": "when the move is not valid"
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addMove",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#addMove",
    "access": null,
    "description": "Adds a move at the specified position.  Follows the rules of go\nwhich means dead stones will be removed.",
    "examples": [
      "var board = Board(3);\nvar new_board = board.addBlackMove(position(1, 0));\n\nconsole.log(board.toPrettyString());\n// +++\n// +++\n// +++\nconsole.log(new_board.toPrettyString());\n// +++\n// O++\n// +++",
      "var board = Board(3)\n    .addBlackMove(position(0, 1))\n    .addBlackMove(position(2, 1))\n    .addBlackMove(position(1, 2))\n    .addWhiteMove(position(1, 1));\nvar new_board.addBlackMove(position(1, 0));\n\nconsole.log(board.toPrettyString());\n// +O+\n// +XO\n// +O+\nconsole.log(new_board.toPrettyString());\n// +O+\n// O+O\n// +O+"
    ],
    "lineNumber": 128,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Board}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "string"
        ],
        "description": "when the move is not valid"
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeMoves",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#removeMoves",
    "access": null,
    "description": "Removes positions.  Positions that are not on the board are ignored.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Board}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Set"
        ],
        "spread": false,
        "optional": false,
        "name": "positions",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "allPossibleMoves",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#allPossibleMoves",
    "access": null,
    "description": "A set of all possible moves on the board, even the occupied ones.",
    "lineNumber": 147,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set} contains Lists (2-tuples)"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": "contains Lists (2-tuples)"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "group",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#group",
    "access": null,
    "description": "Gets a set of positions of the logical group associated with the given position.",
    "lineNumber": 157,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Set}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Set"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isLegalBlackMove",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#isLegalBlackMove",
    "access": null,
    "description": "Check if a move is legal for black",
    "lineNumber": 167,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isLegalWhiteMove",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#isLegalWhiteMove",
    "access": null,
    "description": "Check if a move is legal for white",
    "lineNumber": 177,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "liberties",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#liberties",
    "access": null,
    "description": "Counts liberties for the stone at the given position.",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "List"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "equals",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#equals",
    "access": null,
    "description": "Compare with another board.",
    "lineNumber": 197,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "other_board",
        "description": "Board or Board.positions"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toPrettyString",
    "memberof": "src/board.js~Board",
    "longname": "src/board.js~Board#toPrettyString",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} ASCII board"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "ASCII board"
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/position.js",
    "memberof": null,
    "longname": "src/position.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {List} from 'immutable';\nimport {FixedListSchema} from 'immutable-schema';\n\nimport {isPositiveInteger} from './utils';\n\n\n/**\n * Returns a coordinate type compatible with the rest of godash.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} board_size optional board size to validate against\n * @returns {List} representing a possible coordinate on the board\n * @throws {TypeError} arguments are not integers greater than or equal to 0\n * @throws {TypeError} first two arguments don't validate against board size\n */\nexport function Position(x, y, boardSize) {\n    const position = List.of(x, y);\n\n    if (matchesPositionType(position)) {\n        throw TypeError('Both passed arguments must be integers greater than or equal to 0');\n    }\n\n    if (board_size && !isValidPosition(position, boardSize)) {\n        throw TypeError('Position doesn\\'t fit a the passed board size');\n    }\n\n    return position;\n}\n\n\n/**\n * @private\n */\nfunction isValidPosition(position, boardSize) {\n    return matchesPositionType(position) && position.every(val => val < boardSize);\n}\n\n\n/**\n * @private\n */\nexport const matchesPositionType = FixedListSchema(isPositiveInteger, isPositiveInteger);\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "Position",
    "memberof": "src/position.js",
    "longname": "src/position.js~Position",
    "access": null,
    "export": true,
    "importPath": "godash/src/position.js",
    "importStyle": "{Position}",
    "description": "Returns a coordinate type compatible with the rest of godash.",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{List} representing a possible coordinate on the board"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "board_size",
        "description": "optional board size to validate against"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "List"
      ],
      "spread": false,
      "description": "representing a possible coordinate on the board"
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "arguments are not integers greater than or equal to 0"
      },
      {
        "types": [
          "TypeError"
        ],
        "description": "first two arguments don't validate against board size"
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isValidPosition",
    "memberof": "src/position.js",
    "longname": "src/position.js~isValidPosition",
    "access": "private",
    "export": false,
    "importPath": "godash/src/position.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "params": [
      {
        "name": "position",
        "types": [
          "*"
        ]
      },
      {
        "name": "boardSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "matchesPositionType",
    "memberof": "src/position.js",
    "longname": "src/position.js~matchesPositionType",
    "access": "private",
    "export": true,
    "importPath": "godash/src/position.js",
    "importStyle": "{matchesPositionType}",
    "description": null,
    "lineNumber": 43,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/sequence.js",
    "memberof": null,
    "longname": "src/sequence.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {isNumber} from 'lodash';\nimport {Map} from 'immutable';\nimport {MapSchema, ListSchema, Exactly} from 'immutable-schema';\n\nimport {isValidBoardMap, Board} from './board';\nimport {matchesPositionType} from './position';\n\n\n// This schema isn't as thorough as it can be.\n// The keys must be sequential\nconst isValidVariationMap = MapSchema(\n    ListSchema(isNumber),\n    MapSchema(\n        Exactly('board'), isValidBoardMap,\n        Exactly('last_move'), matchesPositionType,\n        Exactly('metadata'), Map.isMap\n    )\n);\n\n\n/**\n * Node represents a Board in a Variation.  That is, the board state along with any metadata\n * like annotations.\n *\n * This class is not intended to be instantiated by public consumers.\n */\nexport class Node {\n    /**\n     * @private\n     */\n    constructor(board, variation) {\n        this._board = board;\n        this._variation = variation;\n    }\n\n    /**\n     * Board state at this node\n     *\n     * @returns {Board}\n     */\n    get board() {\n        return this._board;\n    }\n\n    /**\n     * Variation for this Node\n     *\n     * @returns {Variation}\n     */\n    get variation() {\n        return this._variation;\n    }\n}\n\n\n/**\n * Tree of moves, represented by Nodes.\n */\nexport class Variation {\n    /**\n     * Create a Variation.\n     *\n     * @param {number} boardSize optional board size, defaults to 19\n     */\n    constructor(boardSize) {\n        if (!boardSize) {\n            boardSize = 19;\n        }\n        this._root = new Node(new Board(boardSize), this);\n    }\n\n    /**\n     * Root node of this variation tree.\n     *\n     * @returns {Node}\n     */\n    get root() {\n        this._root;\n    }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "isValidVariationMap",
    "memberof": "src/sequence.js",
    "longname": "src/sequence.js~isValidVariationMap",
    "access": null,
    "export": false,
    "importPath": "godash/src/sequence.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Node",
    "memberof": "src/sequence.js",
    "longname": "src/sequence.js~Node",
    "access": null,
    "export": true,
    "importPath": "godash/src/sequence.js",
    "importStyle": "{Node}",
    "description": "Node represents a Board in a Variation.  That is, the board state along with any metadata\nlike annotations.\n\nThis class is not intended to be instantiated by public consumers.",
    "lineNumber": 27,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/sequence.js~Node",
    "longname": "src/sequence.js~Node#constructor",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "params": [
      {
        "name": "board",
        "types": [
          "*"
        ]
      },
      {
        "name": "variation",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_board",
    "memberof": "src/sequence.js~Node",
    "longname": "src/sequence.js~Node#_board",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_variation",
    "memberof": "src/sequence.js~Node",
    "longname": "src/sequence.js~Node#_variation",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "board",
    "memberof": "src/sequence.js~Node",
    "longname": "src/sequence.js~Node#board",
    "access": null,
    "description": "Board state at this node",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Board}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Board"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "variation",
    "memberof": "src/sequence.js~Node",
    "longname": "src/sequence.js~Node#variation",
    "access": null,
    "description": "Variation for this Node",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Variation}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Variation"
      ],
      "spread": false,
      "description": ""
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Variation",
    "memberof": "src/sequence.js",
    "longname": "src/sequence.js~Variation",
    "access": null,
    "export": true,
    "importPath": "godash/src/sequence.js",
    "importStyle": "{Variation}",
    "description": "Tree of moves, represented by Nodes.",
    "lineNumber": 59,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/sequence.js~Variation",
    "longname": "src/sequence.js~Variation#constructor",
    "access": null,
    "description": "Create a Variation.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "boardSize",
        "description": "optional board size, defaults to 19"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_root",
    "memberof": "src/sequence.js~Variation",
    "longname": "src/sequence.js~Variation#_root",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "src/sequence.js~Variation",
    "longname": "src/sequence.js~Variation#root",
    "access": null,
    "description": "Root node of this variation tree.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Node}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Node"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/utils.js",
    "memberof": null,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {tail, fromPairs, map, slice, forEach, isNumber, trim} from 'lodash';\n\n\n/**\n * @private\n */\nexport function isPositiveInteger(num) {\n    return isNumber(num) && num === parseInt(num) && num > 0;\n}\n\n\n/**\n * @private\n */\nexport function parseSGF(raw_sgf_string) {\n    const moves = tail(raw_sgf_string.split(';'));\n    return map(moves, parseMove);\n}\n\n\n/**\n * @private\n */\nexport function parseMove(move) {\n    const token = /[A-Z][A-Z]?\\[[^\\]]+\\]/g;\n    const move_tokens = move.match(token);\n\n    if (move_tokens) {\n        const key_value = /([A-Z][A-Z]?)\\[([\\s\\S]+)\\]/;\n        const pairs = map(move_tokens, token => slice(key_value.exec(token), 1, 3));\n        return fromPairs(pairs);\n    } else {\n        return {};\n    }\n}\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "isPositiveInteger",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~isPositiveInteger",
    "access": "private",
    "export": true,
    "importPath": "godash/src/utils.js",
    "importStyle": "{isPositiveInteger}",
    "description": null,
    "lineNumber": 7,
    "params": [
      {
        "name": "num",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parseSGF",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~parseSGF",
    "access": "private",
    "export": true,
    "importPath": "godash/src/utils.js",
    "importStyle": "{parseSGF}",
    "description": null,
    "lineNumber": 15,
    "params": [
      {
        "name": "raw_sgf_string",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parseMove",
    "memberof": "src/utils.js",
    "longname": "src/utils.js~parseMove",
    "access": "private",
    "export": true,
    "importPath": "godash/src/utils.js",
    "importStyle": "{parseMove}",
    "description": null,
    "lineNumber": 24,
    "params": [
      {
        "name": "move",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  }
]